---
import { type CollectionEntry, getCollection } from "astro:content";
import TagPosts from "@layouts/TagPosts.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";
import { defaultLang, getLocalePosts, type Languages } from "i18n/utils";

const currentLang = (Astro.currentLocale as Languages) || defaultLang;

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
  tagName: string;
}

export async function getStaticPaths() {
  const currentLang = (Astro.currentLocale as Languages) || defaultLang;

  const posts = await getCollection("blog", ({ data }) => !data.draft);

  const localePosts = getLocalePosts(posts, currentLang);
  console.log(localePosts);

  const tags = getUniqueTags(localePosts);

  return tags.flatMap(({ tag, tagName }) => {
    const tagPosts = getPostsByTag(localePosts, tag);
    const totalPages = getPageNumbers(tagPosts.length);

    return totalPages.map(page => ({
      params: { tag, page: page.toString() },
      props: { tag, tagName },
    }));
  });
}

const { page } = Astro.params;
const { tag, tagName } = Astro.props;

const posts = await getCollection(
  "blog",
  ({ id, data }) => id.startsWith(currentLang) && !data.draft
);

const postsByTag = getPostsByTag(posts, tag);

const pagination = getPagination({
  posts: postsByTag,
  page,
});

// If the page is number 1, redirect to the tag page
if (page === "1") {
  return Astro.redirect(
    `${getRelativeLocaleUrl(currentLang, "blog")}/tags/${tag}`
  );
}
---

<TagPosts {...pagination} {tag} {tagName} />
