---
// Remove current url path and remove trailing slash if exists
const currentUrlPath = Astro.url.pathname.replace(/\/+$/, "");

// Get url array from path
// eg: /blog/tags/tailwindcss => ['blog', 'tags', 'tailwindcss']
const breadcrumbList = currentUrlPath.split("/").slice(1);

// if breadcrumb is Home > Blog > 1 <etc>
// replace Blog with Blog (page number)
breadcrumbList[0] === "blog" &&
  !isNaN(Number(breadcrumbList[1])) &&
  breadcrumbList.splice(0, 2, `Blog (page ${breadcrumbList[1] || 1})`);

// if breadcrumb is Home > Blog > Tags > [tag] > [page] <etc>
// replace [tag] > [page] with [tag] (page number)
breadcrumbList[1] === "tags" &&
  !isNaN(Number(breadcrumbList[3])) &&
  breadcrumbList.splice(
    2,
    2,
    `${breadcrumbList[2]} ${
      Number(breadcrumbList[3]) === 1 ? "" : "(page " + breadcrumbList[3] + ")"
    }`
  );
---

<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a href="/">Home</a>
      <span aria-hidden="true">&raquo;</span>
    </li>
    {
      breadcrumbList.map((breadcrumb, index) =>
        index + 1 === breadcrumbList.length ? (
          // Last item in the breadcrumb
          <li>
            <span
              class={`${index > 0 && breadcrumbList[1] == "tags" ? "lowercase" : "capitalize"}`}
              aria-current="page"
            >
              {decodeURIComponent(breadcrumb)}
            </span>
          </li>
        ) : (
          // Other items in the breadcrumb
          <li>
            <a
              href={`/${breadcrumbList
                .slice(0, index + 1)
                .join("/")
                .toLowerCase()}`}
            >
              {breadcrumb}
            </a>
            <span aria-hidden="true">&raquo;</span>
          </li>
        )
      )
    }
  </ul>
</nav>

<style>
  .breadcrumb {
    @apply mx-auto mb-1 mt-8 w-full max-w-3xl px-4;
  }
  .breadcrumb ul li {
    @apply inline;
  }
  .breadcrumb ul li a {
    @apply capitalize opacity-70;
  }
  .breadcrumb ul li span {
    @apply opacity-70;
  }
  .breadcrumb ul li:not(:last-child) a {
    @apply hover:opacity-100;
  }
</style>
